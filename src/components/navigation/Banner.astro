---
import Breadcrumbs from "./Breadcrumbs.astro";
import { Image } from 'astro:assets';
import { fade } from "astro:transitions";

let {title,subtitle,backtext,backgroundImage,backgroundImageSrcSet,backgroundImageSizes,tabs,breadcrumbs,colorPrimary,colorSecondary} = Astro.props;

const anim = {
  old: {
    name: 'bump',
    duration: '0.5s',
    easing: 'ease-in',
    direction: 'reverse',
  },
  new: {
    name: 'bump',
    duration: '0.5s',
    easing: 'ease-in-out',
  },
};

---

<div class="relative flex flex-col justify-center overflow-hidden text-center h-40 xl:h-44" 
transition:animate={fade({ duration: '.5s' })}>
	
	<Breadcrumbs {breadcrumbs} />

	<header class={"flex-grow relative z-30 " + (breadcrumbs ? 'pb-6 pt-1' : 'pt-10')}>
		<h1 set:html={title} class="text-2xl md:text-4xl font-extrabold tracking-wide text-stone-100 text-shadow text-center  mt-0 lg:mt-2"></h1>
		<h2 set:html={subtitle} class="text-xl text-stone-100 relative"></h2>
		<h2 set:html={backtext} class={`text-xl text-stone-100 absolute inset-0 overflow-hidden ${backtext ? '' : 'hidden'}`}></h2>
	</header>

	{backgroundImage ? 
	<img 
		srcset={backgroundImageSrcSet}
		sizes={backgroundImageSizes}
		src={ backgroundImage } width="1800" height="360" class="object-cover h-full w-full inset-0 absolute z-10 dark:inver" alt="" /> : ''}



	{(tabs) ? 
	<nav class="flex flex-row justify-center w-1/2 lg:w-1/3  mx-auto rounded-tl-lg rounded-tr-lg z-30 relative rounded-lg shadow">
		{tabs.map((tab, i) => (
			<a id={tab?.id ?? Astro.url.pathname} href={tab.url} data-path={Astro.url.pathname}
				class={`flex flex-grow justify-center bg-stone-50 text-stone-800 dark:bg-stone-900 dark:text-stone-200 hover:bg-red-600 hover:text-stone-200 whitespace-nowrap py-2 px-4 text-sm border-b-2` + 
				(i === 0 ? ' ltr:rounded-tl-lg rtl:rounded-tr-lg' : '') + 
				(i === (tabs.length - 1) ? ' ltr:rounded-tr-lg rtl:rounded-tl-lg' : '') +
				(tab.url === Astro.url.pathname ? ' border-red-500 text-red-600 dark:border-red-700 ' : ' border-transparent text-stone-500 hover:text-stone-700 hover:border-stone-200')
			}>
			{tab.title}
			{tab.count ? 
				<span class="bg-red-500 text-stone-200 dark:bg-red-700 dark:text-stone-100 hidden ltr:ml-3 rtl:mr-3 py-0.5 px-2.5 rounded-full text-xs md:inline-block">{tab.count}</span> : ''}
		  </a>
		))}
	</nav> : ''}

</div>